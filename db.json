{
  "tasks": [
    {
      "title": "X Check App / RS Assessment Too (hardz)",
      "description": "<h2>Цели задания</h2>\n<ul>\n<li>Разработать инструмент, который может использоваться тысячами реальных пользователей.</li>\n<li>Помочь будущим поколениям студентов и менторов школы Rolling Scopes.</li>\n<li>Получить опыт командной работы близкий к условиям реальных проектов.</li>\n<li>Украсить CV ссылкой на качественное приложение.</li>\n</ul>\n<p>После оценки работ мы (организаторы и студенты) выберем решение, которое будет интегрировано в RS App. Решения будут оцениваться по следующим критериям:</p>\n<ul>\n<li>Согласие команды на использование их кода.</li>\n<li>Качество кода и реализации.</li>\n<li>Схожесть дизайна и набора технологий с RS App.</li>\n<li>Готовность команды работать над интеграцией решения в RS App</li>\n</ul>\n<h2>Особенности задания</h2>\n<ul>\n<li>Работа ведётся в группах. <a href=\"https://docs.rs.school/#/final-task\" rel=\"nofollow\">Описание процесса командной работы</a></li>\n<li>Для проверки и оценки решений проводится <a href=\"https://docs.rs.school/#/cross-check-flow\" rel=\"nofollow\">кросс-чек</a>.</li>\n<li>Информацию, которую команда хочет донести до проверяющих необходимо поместить в README репозитория.</li>\n</ul>\n<h2>Технические требования</h2>\n<h3>Нужно использовать</h3>\n<ul>\n<li>React</li>\n</ul>\n<h3><a id=\"user-content-можно-использовать\" class=\"anchor\" href=\"https://github.com/rolling-scopes-school/tasks/blob/master/tasks/xcheck/xcheck.md#можно-использовать\" aria-hidden=\"true\"></a></h3>\n<h3>Можно использовать</h3>\n<ul>\n<li>Redux.</li>\n<li>Create React App</li>\n<li>TypeScript, Next.js, Ant Design - для более простой интеграции решения в RS App</li>\n<li>Всё остальное</li>\n</ul>\n<h3><a id=\"user-content-можно-не-использовать\" class=\"anchor\" href=\"https://github.com/rolling-scopes-school/tasks/blob/master/tasks/xcheck/xcheck.md#можно-не-использовать\" aria-hidden=\"true\"></a></h3>\n<h3>Можно не использовать</h3>\n<ul>\n<li>Хуки. Правда, можно и без них.</li>\n</ul>\n<h3><a id=\"user-content-сервер\" class=\"anchor\" href=\"https://github.com/rolling-scopes-school/tasks/blob/master/tasks/xcheck/xcheck.md#сервер\" aria-hidden=\"true\"></a></h3>\n<h3>Сервер</h3>\n<p>В качестве сервера рекомендуется использовать <a href=\"https://github.com/typicode/json-server\">json-server</a>. Это будет достаточным приближением к реальному Rest API.</p>\n<p>Для удобства командной работы можно коммитить исходный файл (db.json). Но будьте внимательны и не добавляйте в коммиты нежелательные изменения (не делайте <code>git add .</code>).</p>\n<p>В продакшн сборке не будет локального json-server, поэтому каждая команда должна задеплоить свой json-server на какой-нибудь хостинг, <a href=\"https://github.com/jesperorb/json-server-heroku\">например - heroku</a>.</p>\n<p>Можно использовать не json-server, а любую другой способ реализации Rest API. Если не используется сервер, а например локальная эмуляция с localStorage, то оценка будет ниже (см. критерии оценки).</p>\n<h2>Функциональные требования</h2>\n<p>Приложению нужна аутентификация, но форму логина можно сделать упрощённой - с обязательным вводом только логина (githubId). Наличие поля для ввода пароля - на ваше усмотрение, но тогда нужна и упрощённая регистрация. У пользователя также должна быть одна или несколько ролей. Роли выбираются при логине или регистрации (если она есть).</p>\n<p>Задание создаётся пользователем (автором) в виде списка оцениваемых требований. Каждое требование обязательно содержит название и максимальную оценку. Для удобства можно сделать отдельное текстовое описание.</p>\n<p>Чтобы создать запрос на оценку, студент выбирает задачу и указывает ссылку на решение и на pull request.</p>\n<p>Перед тем как запрос становится доступен для проверяющих, студент должен выполнить самопроверку.</p>\n<p>При самопроверке студент ставит оценку по каждому пункту от 0 до максимума. Для каждого пункта можно оставить комментарий, например, пояснить каким образом было реализовано требование.</p>\n<p>При проверке чужой работы процедура та же, но проверяющий видит оценки и комментарии из самопроверки. Для удобства можно заполнять форму оценками из самопроверки, чтобы проверяющий менял только те оценки, с которыми не согласен.</p>\n<p>После того как проверяющий опубликовал свою проверку, она становится доступна для просмотра студенту. Если студент не согласен с оценкой по каким-то пунктам, он может оспорить каждый пункт в отдельности. Проверяющий может изменить оценку или оставить как есть.</p>\n<p>Можно организовывать сессии кросс-чека как в последних наборах RS School. При этом сохраняется возможность создания запроса на проверку вне сессии.</p>\n<p>Кросс-чек сессия проходит несколько стадий:</p>\n<ul>\n<li>Сбор запросов на оценку.</li>\n<li>Проверка работ случайно выбранными участниками сессии.</li>\n<li>Выставление итоговой оценки по результатам проверок.</li>\n</ul>\n<p>Если для стадий кросс-чек сессии можно указать дедлайны, то они носят информативный характер и переключение между стадиями производятся пользователем.</p>\n<h2><a id=\"user-content-сущности-и-состояния\" class=\"anchor\" href=\"https://github.com/rolling-scopes-school/tasks/blob/master/tasks/xcheck/xcheck.md#сущности-и-состояния\" aria-hidden=\"true\"></a></h2>\n<h2>Сущности и состояния</h2>\n<p>Ниже следует пример того, как могли бы выглядеть сущности в приложении. Ваше приложение может использовать как точно такие же структуры, так и совершенно другие. Скорее всего, список неполный и понадобятся ещё вспомогательные сущности. Набор полей точно не исчерпывающий, например не описана структура для финальных оценок после кросс-чека.</p>\n<pre><code>const user = {\n  githubId: \"torvalds\",\n  roles: [\"author\", \"student\", \"supervisor\", \"course_manager\"]\n};\n\nconst task = {\n  id: \"simple-task-v1\",\n  author: \"cardamo\",\n  state: \"DRAFT\", // enum [DRAFT, PUBLISHED, ARCHIVED]\n  categoriesOrder: [\"Basic Scope\", \"Extra Scope\", \"Fines\"],\n  items: [\n    {\n      id: \"basic_p1\",\n      minScore: 0,\n      maxScore: 20,\n      category: \"Basic Scope\",\n      title: \"Basic things\",\n      description: \"You need to make things right, not wrong\"\n    },\n    {\n      id: \"extra_p1\",\n      minScore: 0,\n      maxScore: 30,\n      category: \"Extra Scope\",\n      title: \"More awesome things\",\n      description: \"Be creative and make up some more awesome things\"\n    },\n    {\n      id: \"fines_p1\",\n      minScore: -10,\n      maxScore: 0,\n      category: \"Fines\",\n      title: \"App crashes\",\n      description: \"App causes BSoD!\"\n    }\n  ]\n};\n\nconst taskScore = {\n  task: \"simple-task-v1\",\n  items: {\n    basic_p1: {score: 20, comment: \"Well done!\"},\n    extra_p1: {score: 15, comment: \"Some things are done, some are not\"},\n    fines_p1: {score: 0, comment: \"No ticket today\"},\n  }\n};\n\nconst crossCheckSession = {\n  id: \"rss2020Q3react-xcheck\",\n  state: \"DRAFT\", // enum [DRAFT, REQUESTS_GATHERING, CROSS_CHECK, COMPLETED]\n  taskId: \"simple-task-v1\",\n  coefficient: 0.7,\n  startDate: \"2020-07-07\", \n  endDate: \"2020-07-14\",\n  discardMinScore: true,  # ignore the review with minimal score when calculating average\n  discardMaxScore: false, # similar to discardMinScore\n  minReiewsAmount: 1, // how many peer reviews are required to set a score\n  desiredReviewersAmount: 2, // how many peers are assigned to evaluate each solution\n  attendees: [ // shuffled randomly when state is cahnged from REQUESTS_GATHERING to CROSS_CHECL\n    {githubId: \"ButterBrot777\", reviewerOf: [\"torvalds\", \"cardamo\"]},\n    {githubId: \"torvalds\", reviewerOf: [\"cardamo\"]},\n    {githubId: \"cardamo\", reviewerOf: [\"ButterBrot777\"]}\n  ]\n}\n\nconst reviewRequest = {\n  id: \"rev-req-1\",\n  crossCheckSessionId: \"rss2020Q3react-xcheck\", // may be null if this review is not a part of any session \n  author: \"cardamo\",\n  task: \"simple-task-v1\",\n  state: \"PUBLISHED\", // enum [DRAFT, PUBLISHED, COMPLETED]\n  selfGrade: { /* embedded `taskScore` object */ }\n};\n\nconst review = {\n  id: \"rev-id-1\",\n  requestId: \"rev-req-1\",\n  author: \"ButterBrot777\",\n  state: \"DISPUTED\", // enum [DRAFT, PUBLISHED, DISPUTED, ACCEPTED, REJECTED],\n  grade: { /* embedded `taskScore` object */ }\n};\n\nconst dispute = {\n  reviewId: \"rev-id-1\",\n  state: \"ONGOING\", // enum [ONGOING, ACCEPTED, REJECTED]\n  idem: \"extra_p1\",\n  comment: \"Check out the 'All things' page to see all things that were implemented\",\n  suggestedScore: 30\n};\n</code></pre>\n<h2>Демо</h2>\n<p>Его нет! Вы создаёте уникальное приложение, общеизвестных аналогов которому не существует. Если подобное приложение вам попадалось - просьба отправить ссылку @cardamo.</p>\n<pre><br /><br /></pre>\n<pre><code></code></pre>",
      "authorId": 11542402,
      "slug": "x-check-app-rs-assessment-too",
      "state": "PUBLISHED",
      "created_at": "2020-09-25 10:01:04",
      "updated_at": null,
      "categories": [
        {
          "title": "Базовая функциональность",
          "criteria": [
            {
              "score": "10",
              "text": "<p>Упрощённая страница/окно авторизации.</p>",
              "id": "5a8187fb-e3f9-495f-88a4-d440b2ffc582"
            },
            {
              "text": "<p>Страница со списком задач (tasks).</p>",
              "score": "10",
              "id": "7f97c6ce-7675-4d28-bc70-c36ef7d3461e"
            },
            {
              "text": "<p>Форма (на отдельной странице или в окне) создания и редактирования задачи.</p>",
              "score": "20",
              "id": "00a70240-c559-45cb-823e-3a1efe32db32"
            },
            {
              "text": "<p>Страница со списком запросов на проверку (review requests).</p>",
              "score": "10",
              "id": "afe9ba7e-4e77-4058-9eca-c83cb6484da8"
            },
            {
              "text": "<p>Список запросов на проверку можно сортировать и фильтровать по заданию, выполнившему студенту и статусу.</p>",
              "score": "10",
              "id": "fc3d8ac2-42c4-4144-b382-e80f26af1db6"
            },
            {
              "text": "<p>Форма создания запроса на проверку.&nbsp;</p>",
              "score": "10",
              "id": "0c008f85-3aab-4b4a-bd8d-ccac9513d21b"
            },
            {
              "text": "<p>Форма проверки и самопроверки задания.</p>",
              "score": "20",
              "id": "24cc0943-b1f3-4c3b-908c-f329c8ce7d8d"
            },
            {
              "text": "<p>Страница со списком оценок работ (reviews).</p>",
              "score": "10",
              "id": "3350abab-8a60-4176-95fd-78dd26ef8a75"
            },
            {
              "text": "<p>Список оценок можно сортировать по всем полям/колонкам, где сортировка применима.&nbsp;</p>",
              "score": "10",
              "id": "bb337c8c-a201-49cb-a72d-691b30999fcd"
            },
            {
              "text": "<p>Список оценок можно фильтровать по заданию, выполнившему студенту и проверяющему. Есть .&nbsp;</p>",
              "score": "10",
              "id": "c66caade-0ed3-4333-86da-a2a1e0a940c9"
            },
            {
              "text": "<p>Страница или окно с деталями оценки одного проверяющего.</p>",
              "score": "10",
              "id": "af0b6404-da25-4aba-ac9d-93d8f97223b1"
            },
            {
              "text": "<p>Главная страница со ссылками на остальные доступные страницы ИЛИ всегда видимое меню для навигации.</p>",
              "score": "10",
              "id": "5b3f8526-a84a-4abf-ad2a-815b08735893"
            }
          ],
          "id": "de2ae765-11dd-44b6-8c64-bd8ddba2cb46",
          "slug": "bazovaya-funkcionalnost",
          "created_at": "2020-09-25 10:04:39",
          "updated_at": "2020-09-26 22:31:10",
          "maxScore": 140
        },
        {
          "title": "Дополнительные возможности при создании задания",
          "description": "",
          "criteria": [
            {
              "text": "<p>Пометить пункт как штраф ИЛИ возможность указать минимальный балл меньше</p>",
              "score": "10",
              "id": "f231b3dc-9015-40fe-b3ea-a1c740130db5"
            },
            {
              "text": "<p>Пометить пункт как проверяемый только ментором (скрывать при кросс-чеке), или более сложная система ролей при проверке.</p>",
              "score": "10",
              "id": "4775be48-82da-4f7e-8984-09cf104aca27"
            },
            {
              "text": "<p>Объединение требований в категории (basic scope, advanced, etc).</p>",
              "score": "10",
              "id": "5c2975b3-ce14-4f0f-b88a-556b72fb1e34"
            },
            {
              "text": "<p>Импорт пунктов и категорий в формате <a href=\"https://github.com/rolling-scopes-school/checklist\">RSS Checklist</a>;</p>",
              "score": "10",
              "id": "f23d1e6d-bed0-4f60-be45-5c0a7c19c925"
            },
            {
              "text": "<p>Импорт пунктов и категорий в markdown формате, в котором описано большинство задач RSS.</p>",
              "score": "30",
              "id": "30950c7e-ad8c-422c-a557-6147df8f1128"
            },
            {
              "text": "<p>Экспорт и импорт задания в собственном JSON формате. Побочный эффект - задание легко скопировать, оставив оригинальное без изменений.</p>",
              "score": "20",
              "id": "7c079873-76ca-455a-b323-b071f7c60a16"
            }
          ],
          "id": "bdb8fdd2-d6ce-408c-9030-915159ecc0fe",
          "slug": "dopolnitelnye-vozmozhnosti-pri-sozdanii-zadaniya",
          "created_at": "2020-09-25 10:07:18",
          "updated_at": "2020-09-26 22:32:08",
          "maxScore": 90
        },
        {
          "title": "Дополнительные возможности при проверке задания",
          "description": "",
          "criteria": [
            {
              "text": "<p>Кнопки для быстрой оценки (не выполнено - 0 баллов, выполнено частично - 50%, выполнено полностью - 100%), но остаётся возможность указать любое промежуточное значение.</p>",
              "score": "10",
              "id": "d87132fb-2b27-4bfd-9e1b-b226ae1b73f9"
            },
            {
              "text": "<p>Дать возможность проверяющему добавить ещё один пункт со штрафными или поощрительными баллами. Способы реализации могут быть различными, например можно просто дать возможность указывать не только максимальный балл за требование, но и минимальный меньше ноля.</p>",
              "score": "10",
              "id": "ac17fb9d-8140-440b-8858-145f32603900"
            },
            {
              "text": "<p>Сделать поле комментария обязательным, если оценка не совпадает с самопроверкой.</p>",
              "score": "10",
              "id": "0141c1f6-ede6-4448-96ee-8d2e53712380"
            },
            {
              "text": "<p>Промежуточное состояние проверки (и самопроверки тоже) можно сохранить, не публикуя её.</p>",
              "score": "10",
              "id": "1c8b3e4e-fa74-41a7-a501-efa01f14edd4"
            }
          ],
          "id": "8c679410-a77a-419f-acfe-0f2c202716e1",
          "slug": "dopolnitelnye-vozmozhnosti-pri-proverke-zadaniya",
          "created_at": "2020-09-25 10:09:34",
          "updated_at": "2020-09-26 22:32:24",
          "maxScore": 40
        },
        {
          "title": "Дополнительные возможности после проверки задания",
          "description": "",
          "criteria": [
            {
              "text": "<p>Возможность оставить обратную связь проверяющему - поблагодарить или пожаловаться.</p>",
              "score": "10",
              "id": "6897d5ba-4e09-46ab-9399-dfbf5a47b761"
            },
            {
              "text": "<p>Возможность оспорить оценку по каждому пункту.</p>",
              "score": "30",
              "id": "cb3dc60e-4bbf-4265-98ec-1a551a1ca9f1"
            },
            {
              "text": "<p>Принять решение по оспариваемому пункту может не только проверяющий, но и пользователь со специальной ролью.</p>",
              "score": "10",
              "id": "68a10051-9dd0-457d-97f6-de9dd2111725"
            }
          ],
          "id": "c666ac5d-0c72-4c6b-8768-a931a9b02312",
          "slug": "dopolnitelnye-vozmozhnosti-posle-proverki-zadaniya",
          "created_at": "2020-09-25 10:11:16",
          "updated_at": "2020-09-26 22:32:37",
          "maxScore": 50
        },
        {
          "title": "Кросс-чек",
          "criteria": [
            {
              "text": "<p>Страница со списком кросс-чек сессий. Автор заданий (или другая роль на ваше усмотрение) может создавать и редактировать сессии.</p>",
              "score": "20",
              "id": "7f7223e1-085e-4ceb-9235-9fb6aea4b0b1"
            },
            {
              "text": "<p>Студенты могут создавать запросы на проверку в рамках конкретной кросс-чек сессии.&nbsp;</p>",
              "score": "10",
              "id": "6a217973-ac79-4047-bd47-7dad9618bff5"
            },
            {
              "text": "<p>Автор задания может остановить сбор запросов на проверку в рамках кросс-чек сессии и случайным образом распределить проверяющих</p>",
              "score": "10",
              "id": "09f9210b-b4ca-4630-9a9c-0406663c8c21"
            },
            {
              "text": "<p>Автор задания может завершить кросс-чек сессию, после чего студент может посмотреть свою итоговую оценку.</p>",
              "score": "10",
              "id": "d5dc7282-886f-4c25-9cf8-f197ef3f7e6a"
            }
          ],
          "id": "fc77af08-e037-4620-8d73-16e899ba9123",
          "slug": "kross-chek",
          "created_at": "2020-09-25 10:12:26",
          "updated_at": "2020-09-26 22:32:47",
          "maxScore": 50
        },
        {
          "title": "Дополнительная функциональность",
          "criteria": [
            {
              "text": "<p>Каждое действие, меняющее данные, доступно только при наличии у пользователя соответствующей роли. Набор ролей можно взять из примера или придумать свои.</p>",
              "score": "30",
              "id": "97950e0e-dd46-4b25-8e7e-e894695a2345"
            },
            {
              "text": "<p>Полноценная авторизация через GitHub OAuth. Для удобства проверки выбор ролей лучше оставить при логине.</p>",
              "score": "20",
              "id": "58699b03-02e7-4023-86b9-73a1028f1978"
            },
            {
              "text": "<p>В исходной базе (db.json) есть примеры сущностей каждого типа.</p>",
              "score": "10",
              "id": "c8446ce8-6891-4f72-a571-5e7e04cb1b6a"
            },
            {
              "text": "<p>В исходной базе (db.json) воспроизведено задание <a href=\"https://github.com/rolling-scopes-school/tasks/blob/master/tasks/xcheck/xcheck.md\">xcheck</a> и создан запрос на его оценку.</p>",
              "score": "10",
              "id": "f7bf9ea4-c3a7-4e91-87b1-f648eb0f2200"
            },
            {
              "text": "<p>Дополнительные полезные возможности, не описанные в требованиях к заданию. Для оценки должны обязательно быть описаны в README.</p>",
              "score": "30",
              "id": "40b9f08d-c8ec-49eb-952b-07a086d7ece7"
            }
          ],
          "id": "a4cd0d30-d108-43a9-b84f-f1d352b68272",
          "slug": "dopolnitelnaya-funkcionalnost",
          "created_at": "2020-09-25 10:14:36",
          "updated_at": "2020-09-26 22:32:59",
          "maxScore": 100
        },
        {
          "title": "Качество кода",
          "criteria": [
            {
              "text": "<p>README файл в репозитории с описанием используемых технологий, инструкцией для начала разработки и для деплоя продакшн версии.</p>",
              "score": "20",
              "id": "616adf03-e127-46da-8471-39679caf2a3d"
            },
            {
              "text": "<p>Написаны юнит-тесты, code coverage &gt; 50%. Способ получения coverage report описан в README</p>",
              "score": "50",
              "id": "fceeab79-560e-46fa-87be-ed5c258f06c0"
            },
            {
              "text": "<p>По названиям юнит тестов понятно, что они тестируют. Тесты не просто вызывают код, но и делают осмысленные ассерты.&nbsp;</p>",
              "score": "30",
              "id": "52257dbb-5b8d-47cb-a18b-073e8f847f69"
            },
            {
              "text": "<p>Использован eslint preset (не обязательно airbnb) и нет предупреждений и ошибок.</p>",
              "score": "20",
              "id": "dc78f591-35dd-41df-86d2-1abfda94fff9"
            },
            {
              "text": "<p>В репозитории есть \"следы\" активной командной работы - комментарии в пулл реквестах.&nbsp;</p>",
              "score": "10",
              "id": "f7904a2c-aca4-4b1d-8b8d-af8c73eac303"
            }
          ],
          "id": "2df27786-0371-471d-a596-8a533edc4be6",
          "slug": "kachestvo-koda",
          "created_at": "2020-09-25 10:18:55",
          "updated_at": "2020-09-26 22:33:12",
          "maxScore": 130
        }
      ],
      "id": 4
    },
    {
      "title": "X Check App / RS Assessment Too (cavi)",
      "description": "<h2>Цели задания</h2>\n<ul>\n<li>Разработать инструмент, который может использоваться тысячами реальных пользователей.</li>\n<li>Помочь будущим поколениям студентов и менторов школы Rolling Scopes.</li>\n<li>Получить опыт командной работы близкий к условиям реальных проектов.</li>\n<li>Украсить CV ссылкой на качественное приложение.</li>\n</ul>\n<p>После оценки работ мы (организаторы и студенты) выберем решение, которое будет интегрировано в RS App. Решения будут оцениваться по следующим критериям:</p>\n<ul>\n<li>Согласие команды на использование их кода.</li>\n<li>Качество кода и реализации.</li>\n<li>Схожесть дизайна и набора технологий с RS App.</li>\n<li>Готовность команды работать над интеграцией решения в RS App</li>\n</ul>\n<h2>Особенности задания</h2>\n<ul>\n<li>Работа ведётся в группах. <a href=\"https://docs.rs.school/#/final-task\" rel=\"nofollow\">Описание процесса командной работы</a></li>\n<li>Для проверки и оценки решений проводится <a href=\"https://docs.rs.school/#/cross-check-flow\" rel=\"nofollow\">кросс-чек</a>.</li>\n<li>Информацию, которую команда хочет донести до проверяющих необходимо поместить в README репозитория.</li>\n</ul>\n<h2>Технические требования</h2>\n<h3>Нужно использовать</h3>\n<ul>\n<li>React</li>\n</ul>\n<h3><a id=\"user-content-можно-использовать\" class=\"anchor\" href=\"https://github.com/rolling-scopes-school/tasks/blob/master/tasks/xcheck/xcheck.md#можно-использовать\" aria-hidden=\"true\"></a></h3>\n<h3>Можно использовать</h3>\n<ul>\n<li>Redux.</li>\n<li>Create React App</li>\n<li>TypeScript, Next.js, Ant Design - для более простой интеграции решения в RS App</li>\n<li>Всё остальное</li>\n</ul>\n<h3><a id=\"user-content-можно-не-использовать\" class=\"anchor\" href=\"https://github.com/rolling-scopes-school/tasks/blob/master/tasks/xcheck/xcheck.md#можно-не-использовать\" aria-hidden=\"true\"></a></h3>\n<h3>Можно не использовать</h3>\n<ul>\n<li>Хуки. Правда, можно и без них.</li>\n</ul>\n<h3><a id=\"user-content-сервер\" class=\"anchor\" href=\"https://github.com/rolling-scopes-school/tasks/blob/master/tasks/xcheck/xcheck.md#сервер\" aria-hidden=\"true\"></a></h3>\n<h3>Сервер</h3>\n<p>В качестве сервера рекомендуется использовать <a href=\"https://github.com/typicode/json-server\">json-server</a>. Это будет достаточным приближением к реальному Rest API.</p>\n<p>Для удобства командной работы можно коммитить исходный файл (db.json). Но будьте внимательны и не добавляйте в коммиты нежелательные изменения (не делайте <code>git add .</code>).</p>\n<p>В продакшн сборке не будет локального json-server, поэтому каждая команда должна задеплоить свой json-server на какой-нибудь хостинг, <a href=\"https://github.com/jesperorb/json-server-heroku\">например - heroku</a>.</p>\n<p>Можно использовать не json-server, а любую другой способ реализации Rest API. Если не используется сервер, а например локальная эмуляция с localStorage, то оценка будет ниже (см. критерии оценки).</p>\n<h2>Функциональные требования</h2>\n<p>Приложению нужна аутентификация, но форму логина можно сделать упрощённой - с обязательным вводом только логина (githubId). Наличие поля для ввода пароля - на ваше усмотрение, но тогда нужна и упрощённая регистрация. У пользователя также должна быть одна или несколько ролей. Роли выбираются при логине или регистрации (если она есть).</p>\n<p>Задание создаётся пользователем (автором) в виде списка оцениваемых требований. Каждое требование обязательно содержит название и максимальную оценку. Для удобства можно сделать отдельное текстовое описание.</p>\n<p>Чтобы создать запрос на оценку, студент выбирает задачу и указывает ссылку на решение и на pull request.</p>\n<p>Перед тем как запрос становится доступен для проверяющих, студент должен выполнить самопроверку.</p>\n<p>При самопроверке студент ставит оценку по каждому пункту от 0 до максимума. Для каждого пункта можно оставить комментарий, например, пояснить каким образом было реализовано требование.</p>\n<p>При проверке чужой работы процедура та же, но проверяющий видит оценки и комментарии из самопроверки. Для удобства можно заполнять форму оценками из самопроверки, чтобы проверяющий менял только те оценки, с которыми не согласен.</p>\n<p>После того как проверяющий опубликовал свою проверку, она становится доступна для просмотра студенту. Если студент не согласен с оценкой по каким-то пунктам, он может оспорить каждый пункт в отдельности. Проверяющий может изменить оценку или оставить как есть.</p>\n<p>Можно организовывать сессии кросс-чека как в последних наборах RS School. При этом сохраняется возможность создания запроса на проверку вне сессии.</p>\n<p>Кросс-чек сессия проходит несколько стадий:</p>\n<ul>\n<li>Сбор запросов на оценку.</li>\n<li>Проверка работ случайно выбранными участниками сессии.</li>\n<li>Выставление итоговой оценки по результатам проверок.</li>\n</ul>\n<p>Если для стадий кросс-чек сессии можно указать дедлайны, то они носят информативный характер и переключение между стадиями производятся пользователем.</p>\n<h2><a id=\"user-content-сущности-и-состояния\" class=\"anchor\" href=\"https://github.com/rolling-scopes-school/tasks/blob/master/tasks/xcheck/xcheck.md#сущности-и-состояния\" aria-hidden=\"true\"></a></h2>\n<h2>Сущности и состояния</h2>\n<p>Ниже следует пример того, как могли бы выглядеть сущности в приложении. Ваше приложение может использовать как точно такие же структуры, так и совершенно другие. Скорее всего, список неполный и понадобятся ещё вспомогательные сущности. Набор полей точно не исчерпывающий, например не описана структура для финальных оценок после кросс-чека.</p>\n<pre><code>const user = {\n  githubId: \"torvalds\",\n  roles: [\"author\", \"student\", \"supervisor\", \"course_manager\"]\n};\n\nconst task = {\n  id: \"simple-task-v1\",\n  author: \"cardamo\",\n  state: \"DRAFT\", // enum [DRAFT, PUBLISHED, ARCHIVED]\n  categoriesOrder: [\"Basic Scope\", \"Extra Scope\", \"Fines\"],\n  items: [\n    {\n      id: \"basic_p1\",\n      minScore: 0,\n      maxScore: 20,\n      category: \"Basic Scope\",\n      title: \"Basic things\",\n      description: \"You need to make things right, not wrong\"\n    },\n    {\n      id: \"extra_p1\",\n      minScore: 0,\n      maxScore: 30,\n      category: \"Extra Scope\",\n      title: \"More awesome things\",\n      description: \"Be creative and make up some more awesome things\"\n    },\n    {\n      id: \"fines_p1\",\n      minScore: -10,\n      maxScore: 0,\n      category: \"Fines\",\n      title: \"App crashes\",\n      description: \"App causes BSoD!\"\n    }\n  ]\n};\n\nconst taskScore = {\n  task: \"simple-task-v1\",\n  items: {\n    basic_p1: {score: 20, comment: \"Well done!\"},\n    extra_p1: {score: 15, comment: \"Some things are done, some are not\"},\n    fines_p1: {score: 0, comment: \"No ticket today\"},\n  }\n};\n\nconst crossCheckSession = {\n  id: \"rss2020Q3react-xcheck\",\n  state: \"DRAFT\", // enum [DRAFT, REQUESTS_GATHERING, CROSS_CHECK, COMPLETED]\n  taskId: \"simple-task-v1\",\n  coefficient: 0.7,\n  startDate: \"2020-07-07\", \n  endDate: \"2020-07-14\",\n  discardMinScore: true,  # ignore the review with minimal score when calculating average\n  discardMaxScore: false, # similar to discardMinScore\n  minReiewsAmount: 1, // how many peer reviews are required to set a score\n  desiredReviewersAmount: 2, // how many peers are assigned to evaluate each solution\n  attendees: [ // shuffled randomly when state is cahnged from REQUESTS_GATHERING to CROSS_CHECL\n    {githubId: \"ButterBrot777\", reviewerOf: [\"torvalds\", \"cardamo\"]},\n    {githubId: \"torvalds\", reviewerOf: [\"cardamo\"]},\n    {githubId: \"cardamo\", reviewerOf: [\"ButterBrot777\"]}\n  ]\n}\n\nconst reviewRequest = {\n  id: \"rev-req-1\",\n  crossCheckSessionId: \"rss2020Q3react-xcheck\", // may be null if this review is not a part of any session \n  author: \"cardamo\",\n  task: \"simple-task-v1\",\n  state: \"PUBLISHED\", // enum [DRAFT, PUBLISHED, COMPLETED]\n  selfGrade: { /* embedded `taskScore` object */ }\n};\n\nconst review = {\n  id: \"rev-id-1\",\n  requestId: \"rev-req-1\",\n  author: \"ButterBrot777\",\n  state: \"DISPUTED\", // enum [DRAFT, PUBLISHED, DISPUTED, ACCEPTED, REJECTED],\n  grade: { /* embedded `taskScore` object */ }\n};\n\nconst dispute = {\n  reviewId: \"rev-id-1\",\n  state: \"ONGOING\", // enum [ONGOING, ACCEPTED, REJECTED]\n  idem: \"extra_p1\",\n  comment: \"Check out the 'All things' page to see all things that were implemented\",\n  suggestedScore: 30\n};\n</code></pre>\n<h2>Демо</h2>\n<p>Его нет! Вы создаёте уникальное приложение, общеизвестных аналогов которому не существует. Если подобное приложение вам попадалось - просьба отправить ссылку @cardamo.</p>\n<pre><br /><br /></pre>\n<pre><code></code></pre>",
      "authorId": 48457759,
      "slug": "x-check-app-rs-assessment-too",
      "state": "PUBLISHED",
      "created_at": "2020-09-25 10:01:04",
      "updated_at": null,
      "categories": [
        {
          "title": "Базовая функциональность",
          "criteria": [
            {
              "score": "10",
              "text": "<p>Упрощённая страница/окно авторизации.</p>"
            },
            {
              "text": "<p>Страница со списком задач (tasks).</p>",
              "score": "10"
            },
            {
              "text": "<p>Форма (на отдельной странице или в окне) создания и редактирования задачи.</p>",
              "score": "20"
            },
            {
              "text": "<p>Страница со списком запросов на проверку (review requests).</p>",
              "score": "10"
            },
            {
              "text": "<p>Список запросов на проверку можно сортировать и фильтровать по заданию, выполнившему студенту и статусу.</p>",
              "score": "10"
            },
            {
              "text": "<p>Форма создания запроса на проверку.&nbsp;</p>",
              "score": "10"
            },
            {
              "text": "<p>Форма проверки и самопроверки задания.</p>",
              "score": "20"
            },
            {
              "text": "<p>Страница со списком оценок работ (reviews).</p>",
              "score": "10"
            },
            {
              "text": "<p>Список оценок можно сортировать по всем полям/колонкам, где сортировка применима.&nbsp;</p>",
              "score": "10"
            },
            {
              "text": "<p>Список оценок можно фильтровать по заданию, выполнившему студенту и проверяющему. Есть .&nbsp;</p>",
              "score": "10"
            },
            {
              "text": "<p>Страница или окно с деталями оценки одного проверяющего.</p>",
              "score": "10"
            },
            {
              "text": "<p>Главная страница со ссылками на остальные доступные страницы ИЛИ всегда видимое меню для навигации.</p>",
              "score": "10"
            }
          ],
          "id": "de2ae765-11dd-44b6-8c64-bd8ddba2cb46",
          "slug": "bazovaya-funkcionalnost",
          "created_at": "2020-09-25 10:04:39",
          "updated_at": "2020-09-25 10:25:25",
          "maxScore": 140
        },
        {
          "title": "Дополнительные возможности при создании задания",
          "description": "",
          "criteria": [
            {
              "text": "<p>Пометить пункт как штраф ИЛИ возможность указать минимальный балл меньше</p>",
              "score": "10"
            },
            {
              "text": "<p>Пометить пункт как проверяемый только ментором (скрывать при кросс-чеке), или более сложная система ролей при проверке.</p>",
              "score": "10"
            },
            {
              "text": "<p>Объединение требований в категории (basic scope, advanced, etc).</p>",
              "score": "10"
            },
            {
              "text": "<p>Импорт пунктов и категорий в формате <a href=\"https://github.com/rolling-scopes-school/checklist\">RSS Checklist</a>;</p>",
              "score": "10"
            },
            {
              "text": "<p>Импорт пунктов и категорий в markdown формате, в котором описано большинство задач RSS.</p>",
              "score": "30"
            },
            {
              "text": "<p>Экспорт и импорт задания в собственном JSON формате. Побочный эффект - задание легко скопировать, оставив оригинальное без изменений.</p>",
              "score": "20"
            }
          ],
          "id": "bdb8fdd2-d6ce-408c-9030-915159ecc0fe",
          "slug": "dopolnitelnye-vozmozhnosti-pri-sozdanii-zadaniya",
          "created_at": "2020-09-25 10:07:18",
          "updated_at": "2020-09-25 10:25:41",
          "maxScore": 90
        },
        {
          "title": "Дополнительные возможности при проверке задания",
          "description": "",
          "criteria": [
            {
              "text": "<p>Кнопки для быстрой оценки (не выполнено - 0 баллов, выполнено частично - 50%, выполнено полностью - 100%), но остаётся возможность указать любое промежуточное значение.</p>",
              "score": "10"
            },
            {
              "text": "<p>Дать возможность проверяющему добавить ещё один пункт со штрафными или поощрительными баллами. Способы реализации могут быть различными, например можно просто дать возможность указывать не только максимальный балл за требование, но и минимальный меньше ноля.</p>",
              "score": "10"
            },
            {
              "text": "<p>Сделать поле комментария обязательным, если оценка не совпадает с самопроверкой.</p>",
              "score": "10"
            },
            {
              "text": "<p>Промежуточное состояние проверки (и самопроверки тоже) можно сохранить, не публикуя её.</p>",
              "score": "10"
            }
          ],
          "id": "8c679410-a77a-419f-acfe-0f2c202716e1",
          "slug": "dopolnitelnye-vozmozhnosti-pri-proverke-zadaniya",
          "created_at": "2020-09-25 10:09:34",
          "updated_at": "2020-09-25 10:25:53",
          "maxScore": 40
        },
        {
          "title": "Дополнительные возможности после проверки задания",
          "description": "",
          "criteria": [
            {
              "text": "<p>Возможность оставить обратную связь проверяющему - поблагодарить или пожаловаться.</p>",
              "score": "10"
            },
            {
              "text": "<p>Возможность оспорить оценку по каждому пункту.</p>",
              "score": "30"
            },
            {
              "text": "<p>Принять решение по оспариваемому пункту может не только проверяющий, но и пользователь со специальной ролью.</p>",
              "score": "10"
            }
          ],
          "id": "c666ac5d-0c72-4c6b-8768-a931a9b02312",
          "slug": "dopolnitelnye-vozmozhnosti-posle-proverki-zadaniya",
          "created_at": "2020-09-25 10:11:16",
          "updated_at": "2020-09-25 10:26:05",
          "maxScore": 50
        },
        {
          "title": "Кросс-чек",
          "criteria": [
            {
              "text": "<p>Страница со списком кросс-чек сессий. Автор заданий (или другая роль на ваше усмотрение) может создавать и редактировать сессии.</p>",
              "score": "20"
            },
            {
              "text": "<p>Студенты могут создавать запросы на проверку в рамках конкретной кросс-чек сессии.&nbsp;</p>",
              "score": "10"
            },
            {
              "text": "<p>Автор задания может остановить сбор запросов на проверку в рамках кросс-чек сессии и случайным образом распределить проверяющих</p>",
              "score": "10"
            },
            {
              "text": "<p>Автор задания может завершить кросс-чек сессию, после чего студент может посмотреть свою итоговую оценку.</p>",
              "score": "10"
            }
          ],
          "id": "fc77af08-e037-4620-8d73-16e899ba9123",
          "slug": "kross-chek",
          "created_at": "2020-09-25 10:12:26",
          "updated_at": "2020-09-25 10:26:16",
          "maxScore": 50
        },
        {
          "title": "Дополнительная функциональность",
          "criteria": [
            {
              "text": "<p>Каждое действие, меняющее данные, доступно только при наличии у пользователя соответствующей роли. Набор ролей можно взять из примера или придумать свои.</p>",
              "score": "30"
            },
            {
              "text": "<p>Полноценная авторизация через GitHub OAuth. Для удобства проверки выбор ролей лучше оставить при логине.</p>",
              "score": "20"
            },
            {
              "text": "<p>В исходной базе (db.json) есть примеры сущностей каждого типа.</p>",
              "score": "10"
            },
            {
              "text": "<p>В исходной базе (db.json) воспроизведено задание <a href=\"https://github.com/rolling-scopes-school/tasks/blob/master/tasks/xcheck/xcheck.md\">xcheck</a> и создан запрос на его оценку.</p>",
              "score": "10"
            },
            {
              "text": "<p>Дополнительные полезные возможности, не описанные в требованиях к заданию. Для оценки должны обязательно быть описаны в README.</p>",
              "score": "30"
            }
          ],
          "id": "a4cd0d30-d108-43a9-b84f-f1d352b68272",
          "slug": "dopolnitelnaya-funkcionalnost",
          "created_at": "2020-09-25 10:14:36",
          "updated_at": "2020-09-25 10:26:25",
          "maxScore": 100
        },
        {
          "title": "Качество кода",
          "criteria": [
            {
              "text": "<p>README файл в репозитории с описанием используемых технологий, инструкцией для начала разработки и для деплоя продакшн версии.</p>",
              "score": "20"
            },
            {
              "text": "<p>Написаны юнит-тесты, code coverage &gt; 50%. Способ получения coverage report описан в README</p>",
              "score": "50"
            },
            {
              "text": "<p>По названиям юнит тестов понятно, что они тестируют. Тесты не просто вызывают код, но и делают осмысленные ассерты.&nbsp;</p>",
              "score": "30"
            },
            {
              "text": "<p>Использован eslint preset (не обязательно airbnb) и нет предупреждений и ошибок.</p>",
              "score": "20"
            },
            {
              "text": "<p>В репозитории есть \"следы\" активной командной работы - комментарии в пулл реквестах.&nbsp;</p>",
              "score": "10"
            }
          ],
          "id": "2df27786-0371-471d-a596-8a533edc4be6",
          "slug": "kachestvo-koda",
          "created_at": "2020-09-25 10:18:55",
          "updated_at": "2020-09-25 10:26:36",
          "maxScore": 130
        }
      ],
      "id": 5
    },
    {
      "title": "Виртуальная клавиатура",
      "description": "Вам нужно создать виртуальную клавиатуру",
      "authorId": 11542402,
      "slug": "virtual-keyboard",
      "state": "PUBLISHED",
      "id": 1,
      "created_at": "2020-09-16 20:00:00",
      "update_at": null,
      "categories": [
        {
          "title": "Минимальный набор",
          "description": "",
          "criteria": [
            {
              "score": "20",
              "text": "Реализована генерация DOM-элементов и body в index.html пустой изначально (может находится только тег script)",
              "id": "4dbaadb6-1f54-40e7-bfbd-f6dc67419b4f"
            },
            {
              "score": "10",
              "text": "Нажатие на кнопку на физической клавиатуре подсвечивает кнопку на виртуальной (проверять следует нажатие цифр, букв, знаков препинания, backspace, del (если она присутствует), enter, shift, alt, ctrl, tab, caps lock, space, стрелки вниз-вверх-влево-вправо)",
              "id": "38c1559c-c40c-4a8b-8349-20296017c2a8"
            }
          ],
          "slug": "minimalnyj-nabor",
          "id": "d9129bbe-f924-11ea-adc1-0242ac120002",
          "created_at": "2020-09-16 21:00:00",
          "update_at": null,
          "maxScore": 30,
          "updated_at": "2020-09-26 22:34:25"
        },
        {
          "title": "Стандартный набор",
          "description": "",
          "criteria": [
            {
              "score": "15",
              "text": "Есть переключение между русским и английским языком (сочетание клавиш для переключения языка должно быть указано на странице с клавиатурой), а также сохранение выбранного языка",
              "id": "cd5499ca-f743-441f-a40b-ce1c41629b31"
            },
            {
              "score": "15",
              "text": "Клики мышкой по кнопкам на виртуальной клавиатуре или нажатие на кнопки физической клавиатуры, выводят символы в инпут (textarea)",
              "id": "23bce45b-3535-47ae-9bea-776b2eab76aa"
            }
          ],
          "slug": "standartnyj-nabor",
          "id": "e7d16464-f924-11ea-adc1-0242ac120002",
          "created_at": "2020-09-16 22:00:00",
          "update_at": null,
          "maxScore": 30,
          "updated_at": "2020-09-26 22:34:35"
        },
        {
          "title": "Дополнительный набор",
          "description": "",
          "criteria": [
            {
              "score": "15",
              "text": "Реализована анимация нажатия на кнопку",
              "id": "7cb425b7-70fe-436b-9385-34fa5cef2a34"
            }
          ],
          "slug": "dopolnitelnyj-nabor",
          "id": "f19aee34-f924-11ea-adc1-0242ac120002",
          "created_at": "2020-09-16 22:30:00",
          "update_at": null,
          "maxScore": 15,
          "updated_at": "2020-09-26 22:34:46"
        },
        {
          "title": "Технические требования",
          "description": "",
          "criteria": [
            {
              "score": "15",
              "text": "Использование в коде фишек стандарта ES6 и выше (classes, деструктуризация и т.д.)",
              "id": "8cb39341-72f4-49f5-9560-760bfa02ab9a"
            },
            {
              "score": "10",
              "text": "Использование eslint",
              "id": "fed29c0a-4367-40d4-b21c-7e636a9082a0"
            },
            {
              "score": "10",
              "text": "Требования к репозиторию, коммитам и PR выполнены",
              "id": "3a5e02dd-04a0-422d-a45a-ba7a60f18f18"
            }
          ],
          "slug": "tehnicheskie-trebovaniya",
          "id": "fb3b08e8-f924-11ea-adc1-0242ac120002",
          "created_at": "2020-09-16 23:00:00",
          "update_at": null,
          "maxScore": 35,
          "updated_at": "2020-09-26 22:34:56"
        },
        {
          "title": "Штрафы",
          "description": "",
          "criteria": [
            {
              "score": "-15",
              "text": "Ошибки в консоли, связанные с исполняемым кодом (ошибки типа favicon.ico: Failed to load resource: the server responded with a status of 404 не учитываются) или предупреждения eslint-config-airbnb-base",
              "id": "72ec6975-d208-4678-9764-9bcc1651a86b"
            }
          ],
          "slug": "shtrafy",
          "id": "00d77dd6-f925-11ea-adc1-0242ac120002",
          "created_at": "2020-09-16 23:30:00",
          "update_at": null,
          "maxScore": -15,
          "updated_at": "2020-09-26 22:35:11"
        }
      ]
    },
    {
      "title": "English for kids",
      "description": "English for kids - приложение для изучения английских слов детьми.",
      "authorId": 11542402,
      "slug": "english-for-kids",
      "state": "PUBLISHED",
      "id": 2,
      "created_at": "2020-09-15 19:00:00",
      "update_at": null,
      "categories": []
    },
    {
      "title": "MovieSearch",
      "description": "MovieSearch - одностраничное приложение, отображающее информацию о фильмах по запросу пользователя.Для получения информации используется OMDb RESTful API.",
      "authorId": 11542402,
      "slug": "movie-search",
      "state": "PUBLISHED",
      "id": 3,
      "created_at": "2020-09-14 15:00:00",
      "update_at": null,
      "categories": []
    }
  ],
  "taskScore": [
    {
      "task_id": 1,
      "items": {
        "basic_p1": {
          "score": 20,
          "comment": "Well done!"
        },
        "extra_p1": {
          "score": 15,
          "comment": "Some things are done, some are not"
        },
        "fines_p1": {
          "score": 0,
          "comment": "No ticket today"
        }
      }
    },
    {
      "task_id": 2,
      "items": {
        "basic_p1": {
          "score": 20,
          "comment": "Well done!"
        },
        "extra_p1": {
          "score": 15,
          "comment": "Some things are done, some are not"
        },
        "fines_p1": {
          "score": 0,
          "comment": "No ticket today"
        }
      }
    }
  ],
  "crossCheckSession": [],
  "reviewRequest": [
    {
      "name": "X Check App / RS Assessment Too",
      "task": 5,
      "url": "https://github.com/DzmitryCavi/x-check-app",
      "selfGrade": {
        "Базовая функциональность": [
          {
            "number": 10,
            "discription": "Well done!"
          },
          {
            "number": 10,
            "discription": "Well done!"
          },
          {
            "number": 20,
            "discription": "Well done!"
          },
          {
            "number": 5,
            "discription": "Some things are done, some are not"
          },
          {
            "number": 5,
            "discription": "Some things are done, some are not"
          },
          {
            "number": 10,
            "discription": "Well done!"
          },
          {
            "number": 10,
            "discription": "Some things are done, some are not"
          },
          {
            "number": 0,
            "discription": "No ticket today"
          },
          {
            "number": 10,
            "discription": "Well done!"
          },
          {
            "number": 10,
            "discription": "Well done!"
          },
          {
            "number": 5,
            "discription": "Some things are done, some are not"
          },
          {
            "number": 10,
            "discription": "Well done!"
          }
        ],
        "Дополнительные возможности при создании задания": [
          {
            "number": 10,
            "discription": "Well done!"
          },
          {
            "number": 5,
            "discription": "Some things are done, some are not"
          },
          {
            "number": 10,
            "discription": "Well done!"
          },
          {
            "number": 10,
            "discription": "Well done!"
          },
          {
            "number": 0,
            "discription": "No ticket today"
          },
          {
            "number": 20,
            "discription": "Well done!"
          }
        ],
        "Дополнительные возможности при проверке задания": [
          {
            "number": 10,
            "discription": "Well done!"
          },
          {
            "number": 0,
            "discription": "No ticket today"
          },
          {
            "number": 0,
            "discription": "No ticket today"
          },
          {
            "number": 5,
            "discription": "Some things are done, some are not"
          }
        ],
        "Дополнительные возможности после проверки задания": [
          {
            "number": 0,
            "discription": "No ticket today"
          },
          {
            "number": 0,
            "discription": "No ticket today"
          },
          {
            "number": 0,
            "discription": "No ticket today"
          }
        ],
        "Кросс-чек": [
          {
            "number": 0,
            "discription": "No ticket today"
          },
          {
            "number": 0,
            "discription": "No ticket today"
          },
          {
            "number": 0,
            "discription": "No ticket today"
          },
          {
            "number": 0,
            "discription": "No ticket today"
          }
        ],
        "Дополнительная функциональность": [
          {
            "number": 30,
            "discription": "Well done!"
          },
          {
            "number": 20,
            "discription": "Well done!"
          },
          {
            "number": 10,
            "discription": "Well done!"
          },
          {
            "number": 10,
            "discription": "Well done!"
          },
          {
            "number": 0,
            "discription": "No ticket today"
          }
        ],
        "Качество кода": [
          {
            "number": 0,
            "discription": "No ticket today"
          },
          {
            "number": 0,
            "discription": "No ticket today"
          },
          {
            "number": 0,
            "discription": "No ticket today"
          },
          {
            "number": 20,
            "discription": "Well done!"
          },
          {
            "number": 5,
            "discription": "Some things are done, some are not"
          }
        ]
      },
      "score": 270,
      "state": "DRAFT",
      "author": "DzmitryCavi",
      "id": "request-d3db8b93-8f82-4cdb-8a94-42469fd814f9",
      "created_at": "2020-09-25 18:06:25",
      "updated_at": "2020-09-25 18:43:02",
      "closed_at": null
    },
    {
      "name": "Виртуальная клавиатура",
      "task": 1,
      "url": "https://github.com/DzmitryCavi/x-check-app/tree/dev",
      "selfGrade": {
        "Минимальный набор": [
          {
            "number": 10,
            "discription": "Some things are done, some are not"
          },
          {
            "number": 10,
            "discription": "Well done!"
          }
        ],
        "Стандартный набор": [
          {
            "number": 7.5,
            "discription": "Some things are done, some are not"
          },
          {
            "number": 15,
            "discription": "Well done!"
          }
        ],
        "Дополнительный набор": [
          {
            "number": 7.5,
            "discription": "Some things are done, some are not"
          }
        ],
        "Технические требования": [
          {
            "number": 15,
            "discription": "Well done!"
          },
          {
            "number": 5,
            "discription": "Some things are done, some are not"
          },
          {
            "number": 10,
            "discription": "Well done!"
          }
        ],
        "Штрафы": [
          {
            "number": -15,
            "discription": "Some things are done, some are not"
          }
        ]
      },
      "score": 65,
      "state": "SUBMITTED",
      "author": "DzmitryCavi",
      "id": "request-0a7499d5-6190-4f34-b77b-97541855b9b8",
      "created_at": "2020-09-24 06:20:03",
      "updated_at": null,
      "closed_at": null
    },
    {
      "name": "Movie Search",
      "task": 1,
      "url": "https://github.com/DzmitryCavi/x-check-app/tree/dev",
      "selfGrade": {
        "Минимальный набор": [
          {
            "number": 10,
            "discription": "Some things are done, some are not"
          },
          {
            "number": 10,
            "discription": "Well done!"
          }
        ],
        "Стандартный набор": [
          {
            "number": 7.5,
            "discription": "Some things are done, some are not"
          },
          {
            "number": 15,
            "discription": "Well done!"
          }
        ],
        "Дополнительный набор": [
          {
            "number": 7.5,
            "discription": "Some things are done, some are not"
          }
        ],
        "Технические требования": [
          {
            "number": 15,
            "discription": "Well done!"
          },
          {
            "number": 5,
            "discription": "Some things are done, some are not"
          },
          {
            "number": 10,
            "discription": "Well done!"
          }
        ],
        "Штрафы": [
          {
            "number": 0,
            "discription": "Well"
          }
        ]
      },
      "score": 80,
      "state": "GRADED",
      "author": "DzmitryCavi",
      "id": "request-0a7499d5-6190-4f34-b77b-97541855a99",
      "created_at": "2020-09-24 06:20:03",
      "updated_at": "2020-09-24 07:20:03",
      "closed_at": "2020-09-24 08:20:03"
    }
  ],
  "reviews": [
    {
      "id": "1",
      "student": "hallovarvara",
      "task": "X-check",
      "requestId": "rev-req-1",
      "author": "ButterBrot777",
      "state": "DISPUTED",
      "grade": {
        "score": 25,
        "maxScore": 50,
        "basic_p1": {
          "score": 20,
          "comment": "Well done!"
        },
        "extra_p1": {
          "score": 5,
          "comment": "It is awfull"
        },
        "fines_p1": {
          "score": 0,
          "comment": "No ticket today"
        }
      }
    },
    {
      "id": "2",
      "student": "wayjewish",
      "task": "Songbird",
      "requestId": "rev-req-2",
      "author": "torvalds",
      "state": "REJECTED",
      "grade": {
        "score": 0,
        "maxScore": 100,
        "basic_p1": {
          "score": 20,
          "comment": "Not bad!"
        },
        "extra_p1": {
          "score": 0,
          "comment": "Did you do something?"
        },
        "fines_p1": {
          "score": 20,
          "comment": "A lot of errors!"
        }
      }
    },
    {
      "id": "3",
      "student": "cup0ra",
      "task": "Songbird",
      "requestId": "rev-req-3",
      "author": "cardamo",
      "state": "ACCEPTED",
      "grade": {
        "score": 100,
        "maxScore": 100,
        "basic_p1": {
          "score": 40,
          "comment": "Well done!"
        },
        "extra_p1": {
          "score": 60,
          "comment": "amazing"
        },
        "fines_p1": {
          "score": 0,
          "comment": "No ticket today"
        }
      }
    }
  ],
  "dispute": [
    {
      "reviewId": 1,
      "state": "ONGOING",
      "idem": "extra_p1",
      "comment": "Check out the 'All things' page to see all things that were implemented",
      "suggestedScore": 30
    },
    {
      "reviewId": 2,
      "state": "ACCEPTED",
      "idem": "extra_p1",
      "comment": "Check out the 'All things' page to see all things that were implemented",
      "suggestedScore": 30
    },
    {
      "reviewId": 3,
      "state": "ACCEPTED",
      "idem": "basic_p1",
      "comment": "Check out the 'All things' page to see all things that were implemented",
      "suggestedScore": 20
    }
  ]
}